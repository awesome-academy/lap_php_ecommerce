<?php

namespace Tests\Unit\Controller;

use App\Http\Controllers\CategoryController;
use App\Models\Category;
use App\Models\Product;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Illuminate\Support\Collection;
use Tests\TestCase;

class CategoryTest extends TestCase
{
    protected $categoryMock;

    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
    }

    public function tearDown(): void
    {
        parent::tearDown(); // TODO: Change the autogenerated stub
    }

    public function test_show_function()
    {
        $category = new CategoryController();
        $result = $category->show(3);
        $data = $result->getData();
        $this->assertIsArray($data);
        $this->assertEquals('products.product', $result->getName());
        $this->assertArrayHasKey('products', $data);
        $this->assertInstanceOf(Product::class, $data['products'][0][0]);
    }

    public function test_show_function_exception()
    {
        $category = new CategoryController();
        $result = $category->show(20);
        $this->assertTrue($result->isRedirect());
    }
}
